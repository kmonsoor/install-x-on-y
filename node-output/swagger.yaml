{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Swagger Appstore",
    "description" : "This is a app-install-info.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/onu8/ixoy/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  }, {
    "url" : "https://ixoy.swagger.io/v2"
  } ],
  "tags" : [ {
    "name" : "app",
    "description" : "Everything about an app",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "ixoys",
    "description" : "Access to Appstore ixoys"
  }, {
    "name" : "os",
    "description" : "Operations about os",
    "externalDocs" : {
      "description" : "Find out more about our store",
      "url" : "http://swagger.io"
    }
  } ],
  "paths" : {
    "/app" : {
      "put" : {
        "summary" : "Update an existing app",
        "operationId" : "updateApp",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/App"
        },
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "App not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        },
        "security" : [ {
          "appstore_auth" : [ "write:apps", "read:apps" ]
        } ]
      },
      "post" : {
        "summary" : "Add a new app to the store",
        "operationId" : "addApp",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/App"
        },
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "appstore_auth" : [ "write:apps", "read:apps" ]
        } ]
      }
    },
    "/app/findByOs" : {
      "get" : {
        "summary" : "Finds apps by OS",
        "description" : "Multiple status values can be provided with comma separated strings",
        "operationId" : "findAppsByOs",
        "parameters" : [ {
          "name" : "os",
          "in" : "query",
          "description" : "OS values that need to be considered for filter",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/App"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/App"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        },
        "security" : [ {
          "appstore_auth" : [ "read:apps" ]
        } ]
      }
    },
    "/app/{osId}" : {
      "get" : {
        "summary" : "Finds apps by OS ID",
        "description" : "Finds all the apps available for an OS",
        "operationId" : "findAppsByOsId",
        "parameters" : [ {
          "name" : "osId",
          "in" : "path",
          "description" : "OS ID value that need to be considered for filter",
          "required" : true,
          "style" : "simple",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/App"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/App"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        },
        "security" : [ {
          "appstore_auth" : [ "read:apps" ]
        } ]
      }
    },
    "/app/{appId}" : {
      "get" : {
        "summary" : "Find app by ID",
        "description" : "Returns a single app",
        "operationId" : "getAppById",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "ID of app to return",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/App"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/App"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "App not found"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        } ]
      },
      "post" : {
        "summary" : "Updates an app in the store with form data",
        "operationId" : "updateAppWithForm",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "ID of app that needs to be updated",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/x-www-form-urlencoded" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "405" : {
            "description" : "Invalid input"
          }
        },
        "security" : [ {
          "appstore_auth" : [ "write:apps", "read:apps" ]
        } ]
      },
      "delete" : {
        "summary" : "Deletes a app",
        "operationId" : "deleteApp",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "appId",
          "in" : "path",
          "description" : "App id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "App not found"
          }
        },
        "security" : [ {
          "appstore_auth" : [ "write:apps", "read:apps" ]
        } ]
      }
    },
    "/ixoy" : {
      "post" : {
        "summary" : "Add an ixoy for a app",
        "operationId" : "addIxoy",
        "requestBody" : {
          "description" : "ixoy added for the (app, OS)",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ixoy"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ixoy"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ixoy"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Ixoy"
          }
        }
      }
    },
    "/ixoy/{ixoyId}" : {
      "get" : {
        "summary" : "Find purchase ixoy by ID",
        "description" : "For valid response try integer IDs with value >= 1 and <= 10.\\ \\ Other values will generated exceptions",
        "operationId" : "getIxoyById",
        "parameters" : [ {
          "name" : "ixoyId",
          "in" : "path",
          "description" : "ID of app that needs to be fetched",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ixoy"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ixoy"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Ixoy not found"
          }
        }
      },
      "delete" : {
        "summary" : "Delete purchase ixoy by ID",
        "description" : "For valid response try integer IDs with positive integer value.\\ \\ Negative or non-integer values will generate API errors",
        "operationId" : "deleteIxoy",
        "parameters" : [ {
          "name" : "ixoyId",
          "in" : "path",
          "description" : "ID of the ixoy that needs to be deleted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Ixoy not found"
          }
        }
      }
    },
    "/os" : {
      "post" : {
        "summary" : "Create os",
        "description" : "This can only be done by the logged in.",
        "operationId" : "createOs",
        "requestBody" : {
          "description" : "Created os object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Os"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/os/createWithArray" : {
      "post" : {
        "summary" : "Creates list of OSs with given input array",
        "operationId" : "createOssWithArrayInput",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/OsArray"
        },
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/os/{osId}" : {
      "get" : {
        "summary" : "Get os by os name",
        "operationId" : "getOsById",
        "parameters" : [ {
          "name" : "osId",
          "in" : "path",
          "description" : "The ID of the OS that needs to be fetched.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Os"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Os"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid osname supplied"
          },
          "404" : {
            "description" : "OS not found"
          }
        }
      },
      "put" : {
        "summary" : "Updated os",
        "description" : "This can only be done by the logged in os.",
        "operationId" : "updateOs",
        "parameters" : [ {
          "name" : "osId",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "description" : "Updated os object",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Os"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "400" : {
            "description" : "Invalid os supplied"
          },
          "404" : {
            "description" : "Os not found"
          }
        }
      },
      "delete" : {
        "summary" : "Delete os",
        "description" : "This can only be done by the logged in os.",
        "operationId" : "deleteOsById",
        "parameters" : [ {
          "name" : "osId",
          "in" : "path",
          "description" : "The name that needs to be deleted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid osname supplied"
          },
          "404" : {
            "description" : "Os not found"
          }
        }
      }
    },
    "/os/{osname}" : {
      "get" : {
        "summary" : "Get os by os name",
        "operationId" : "getOsByName",
        "parameters" : [ {
          "name" : "osname",
          "in" : "path",
          "description" : "The name that needs to be fetched. Use os1 for testing.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Os"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Os"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid osname supplied"
          },
          "404" : {
            "description" : "OS not found"
          }
        }
      },
      "delete" : {
        "summary" : "Delete os",
        "description" : "This can only be done by the logged in os.",
        "operationId" : "deleteOsByName",
        "parameters" : [ {
          "name" : "osname",
          "in" : "path",
          "description" : "The name that needs to be deleted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid osname supplied"
          },
          "404" : {
            "description" : "Os not found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Ixoy" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "appId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "appVersion" : {
            "type" : "string",
            "description" : "app version"
          },
          "osId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "osVersion" : {
            "type" : "string",
            "description" : "os version"
          },
          "dateAdded" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dateLastUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "description" : "Ixoy Status",
            "enum" : [ "added", "rejected", "verified", "approved" ]
          },
          "complete" : {
            "type" : "boolean",
            "default" : false
          }
        },
        "xml" : {
          "name" : "Ixoy"
        }
      },
      "Os" : {
        "type" : "object",
        "properties" : {
          "osId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "osName" : {
            "type" : "string"
          },
          "sys_platforms" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "xml" : {
          "name" : "Os"
        }
      },
      "Version" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "alias" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Platform"
        }
      },
      "App" : {
        "required" : [ "id", "name", "platforms", "versions" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string",
            "example" : "Python"
          },
          "platforms" : {
            "type" : "array",
            "xml" : {
              "name" : "platforms",
              "wrapped" : true
            },
            "items" : {
              "type" : "string"
            }
          },
          "versions" : {
            "type" : "array",
            "xml" : {
              "name" : "version",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Version"
            }
          }
        },
        "xml" : {
          "name" : "App"
        }
      },
      "ApiResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "body" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Updated name of the app"
          },
          "status" : {
            "type" : "string",
            "description" : "Updated status of the app"
          }
        }
      }
    },
    "requestBodies" : {
      "App" : {
        "description" : "App object that needs to be added to the store",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/App"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/App"
            }
          }
        },
        "required" : true
      },
      "OsArray" : {
        "description" : "List of os object",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/Os"
              }
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "appstore_auth" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "http://appstore.swagger.io/oauth/dialog",
            "scopes" : {
              "write:apps" : "modify apps in your account",
              "read:apps" : "read your apps"
            }
          }
        }
      },
      "api_key" : {
        "type" : "apiKey",
        "name" : "api_key",
        "in" : "header"
      }
    }
  }
}